buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
    }
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/central/'
        }
        maven {
            url 'https://repo.spring.io/plugins-release'
        }
        maven {
            url 'https://plugins.gradle.org/m2'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.11.RELEASE")
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
    }
}

apply plugin: "java"
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.smile'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

ext {
    lombokVersion = '1.18.6'
//    springBootVersion = '2.3.2.RELEASE'
}

configurations {
    providedRuntime
    all*.exclude module: 'spring-boot-starter-logging'//排除对默认logging的依赖
}

repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    maven {
        url 'http://maven.aliyun.com/nexus/content/repositories/central/'
    }
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.72'

    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-data-redis")
    compile("org.springframework.data:spring-data-redis")
    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main {
        java { srcDirs = ["src/main/java"] }
        resources { srcDirs = ["src/main/resources"] }
    }
    test {
        java { srcDirs = [ 'src/test/java' ] }
        resources { srcDirs = [ 'src/test/resources'] }
    }
}
//bootJar {
//    enabled = false
//}

jar {
    enabled = true
}

mainClassName = "com.smile.boot.Bootstrap"